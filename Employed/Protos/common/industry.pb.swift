// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: protocol/common/industry.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

enum Employed_Io_Industry: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case engineering // = 0
  case business // = 1
  case design // = 2
  case artsEntertainment // = 3
  case communications // = 4
  case education // = 5
  case environment // = 6
  case government // = 7
  case health // = 8
  case international // = 9
  case law // = 10
  case nonprofit // = 11
  case sciences // = 12
  case UNRECOGNIZED(Int)

  init() {
    self = .engineering
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 0: self = .engineering
    case 1: self = .business
    case 2: self = .design
    case 3: self = .artsEntertainment
    case 4: self = .communications
    case 5: self = .education
    case 6: self = .environment
    case 7: self = .government
    case 8: self = .health
    case 9: self = .international
    case 10: self = .law
    case 11: self = .nonprofit
    case 12: self = .sciences
    default: self = .UNRECOGNIZED(rawValue)
    }
  }

  var rawValue: Int {
    switch self {
    case .engineering: return 0
    case .business: return 1
    case .design: return 2
    case .artsEntertainment: return 3
    case .communications: return 4
    case .education: return 5
    case .environment: return 6
    case .government: return 7
    case .health: return 8
    case .international: return 9
    case .law: return 10
    case .nonprofit: return 11
    case .sciences: return 12
    case .UNRECOGNIZED(let i): return i
    }
  }

}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension Employed_Io_Industry: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    0: .same(proto: "ENGINEERING"),
    1: .same(proto: "BUSINESS"),
    2: .same(proto: "DESIGN"),
    3: .same(proto: "ARTS_ENTERTAINMENT"),
    4: .same(proto: "COMMUNICATIONS"),
    5: .same(proto: "EDUCATION"),
    6: .same(proto: "ENVIRONMENT"),
    7: .same(proto: "GOVERNMENT"),
    8: .same(proto: "HEALTH"),
    9: .same(proto: "INTERNATIONAL"),
    10: .same(proto: "LAW"),
    11: .same(proto: "NONPROFIT"),
    12: .same(proto: "SCIENCES"),
  ]
}
